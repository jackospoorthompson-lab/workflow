name: AI Writer

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "What should the AI do?"
        required: true
      paths:
        description: "Comma-separated path globs (e.g. docs/**, README.md)"
        required: true
        default: "docs/**"
      mode:
        description: "commit or pr"
        required: true
        default: "commit"
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

jobs:
  run:
    if: github.event_name != 'issue_comment' || contains(github.event.comment.body, '/ai ')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install openai pyyaml gitpython

      - name: Derive inputs from comment (if any)
        id: derive
        run: |
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            BODY="${{ github.event.comment.body }}"
            # comment pattern: /ai paths=docs/** mode=commit prompt=Rewrite docs for clarity
            PROMPT="$(echo "$BODY" | sed -n 's#.*prompt=\(.*\)#\1#p')"
            PATHS="$(echo "$BODY" | sed -n 's#.*paths=\([^ ]*\).*#\1#p')"
            MODE="$(echo "$BODY" | sed -n 's#.*mode=\([^ ]*\).*#\1#p')"
            echo "prompt=${PROMPT}" >> $GITHUB_OUTPUT
            echo "paths=${PATHS:-docs/**}" >> $GITHUB_OUTPUT
            echo "mode=${MODE:-commit}" >> $GITHUB_OUTPUT
          else
            echo "prompt=${{ github.event.inputs.prompt }}" >> $GITHUB_OUTPUT
            echo "paths=${{ github.event.inputs.paths }}" >> $GITHUB_OUTPUT
            echo "mode=${{ github.event.inputs.mode }}" >> $GITHUB_OUTPUT
          fi

      - name: Run AI Editor
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GH_TOKEN: ${{ secrets.GH_TOKEN || github.token }}
          GIT_AUTHOR_NAME: ai-bot
          GIT_AUTHOR_EMAIL: ai-bot@users.noreply.github.com
          GIT_COMMITTER_NAME: ai-bot
          GIT_COMMITTER_EMAIL: ai-bot@users.noreply.github.com
          INPUT_PROMPT: ${{ steps.derive.outputs.prompt }}
          INPUT_PATHS: ${{ steps.derive.outputs.paths }}
          INPUT_MODE: ${{ steps.derive.outputs.mode }}
        run: |
          python .github/workflows/ai_writer.py

      - name: Push changes (commit mode)
        if: env.INPUT_MODE == 'commit'
        run: |
          git status
          if ! git diff --quiet; then
            git add -A
            git commit -m "AI: ${{ steps.derive.outputs.prompt }}"
            git push
          else
            echo "No changes to commit."
          fi

      - name: Create PR (pr mode)
        if: env.INPUT_MODE == 'pr'
        run: |
          BRANCH="ai/update-$(date +%s)"
          git checkout -b "$BRANCH"
          if ! git diff --quiet; then
            git add -A
            git commit -m "AI (PR): ${{ steps.derive.outputs.prompt }}"
            git push --set-upstream origin "$BRANCH"
            gh pr create --fill --title "AI: ${{ steps.derive.outputs.prompt }}" --body "Automated edits."
          else
            echo "No changes to propose."
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN || github.token }}
